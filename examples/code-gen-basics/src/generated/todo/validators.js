// Generated by @compas/code-gen
/* eslint-disable no-unused-vars */

import {
  anonymousValidator1231411047,
  anonymousValidator1328493231,
  anonymousValidator1850411744,
  anonymousValidator1944484315,
  anonymousValidator23916476,
  anonymousValidator248765300,
  anonymousValidator366487642,
  anonymousValidator712084859,
} from "../common/anonymous-validators.js";
import { AppError, isNil } from "@compas/stdlib";
/**
 * @template T
 * @typedef {import("@compas/stdlib").Either<T, AppError>} Either
 */
/**
 * @param {undefined|any|TodoAddResponseInput} value
 * @param {string|undefined} [propertyPath]
 * @returns {Either<TodoAddResponse>}
 */
export function validateTodoAddResponse(value, propertyPath = "$") {
  const result = anonymousValidator23916476(value, propertyPath);
  if (result.errors) {
    const info = {};
    for (const err of result.errors) {
      if (isNil(info[err.propertyPath])) {
        info[err.propertyPath] = err;
      } else if (Array.isArray(info[err.propertyPath])) {
        info[err.propertyPath].push(err);
      } else {
        info[err.propertyPath] = [info[err.propertyPath], err];
      }
    }
    /** @type {{ error: AppError }} */
    return {
      error: AppError.validationError("validator.error", info),
    };
  }
  /** @type {{ value: TodoAddResponse}} */
  return { value: result.value };
}
/**
 * @param {undefined|any|TodoCompleteParamsInput} value
 * @param {string|undefined} [propertyPath]
 * @returns {Either<TodoCompleteParams>}
 */
export function validateTodoCompleteParams(value, propertyPath = "$") {
  const result = anonymousValidator1944484315(value, propertyPath);
  if (result.errors) {
    const info = {};
    for (const err of result.errors) {
      if (isNil(info[err.propertyPath])) {
        info[err.propertyPath] = err;
      } else if (Array.isArray(info[err.propertyPath])) {
        info[err.propertyPath].push(err);
      } else {
        info[err.propertyPath] = [info[err.propertyPath], err];
      }
    }
    /** @type {{ error: AppError }} */
    return {
      error: AppError.validationError("validator.error", info),
    };
  }
  /** @type {{ value: TodoCompleteParams}} */
  return { value: result.value };
}
/**
 * @param {undefined|any|TodoCompleteResponseInput} value
 * @param {string|undefined} [propertyPath]
 * @returns {Either<TodoCompleteResponse>}
 */
export function validateTodoCompleteResponse(value, propertyPath = "$") {
  const result = anonymousValidator1850411744(value, propertyPath);
  if (result.errors) {
    const info = {};
    for (const err of result.errors) {
      if (isNil(info[err.propertyPath])) {
        info[err.propertyPath] = err;
      } else if (Array.isArray(info[err.propertyPath])) {
        info[err.propertyPath].push(err);
      } else {
        info[err.propertyPath] = [info[err.propertyPath], err];
      }
    }
    /** @type {{ error: AppError }} */
    return {
      error: AppError.validationError("validator.error", info),
    };
  }
  /** @type {{ value: TodoCompleteResponse}} */
  return { value: result.value };
}
/**
 * @param {undefined|any|TodoItemInput} value
 * @param {string|undefined} [propertyPath]
 * @returns {Either<TodoItem>}
 */
export function validateTodoItem(value, propertyPath = "$") {
  const result = anonymousValidator1231411047(value, propertyPath);
  if (result.errors) {
    const info = {};
    for (const err of result.errors) {
      if (isNil(info[err.propertyPath])) {
        info[err.propertyPath] = err;
      } else if (Array.isArray(info[err.propertyPath])) {
        info[err.propertyPath].push(err);
      } else {
        info[err.propertyPath] = [info[err.propertyPath], err];
      }
    }
    /** @type {{ error: AppError }} */
    return {
      error: AppError.validationError("validator.error", info),
    };
  }
  /** @type {{ value: TodoItem}} */
  return { value: result.value };
}
/**
 * @param {undefined|any|TodoItemPickInput} value
 * @param {string|undefined} [propertyPath]
 * @returns {Either<TodoItemPick>}
 */
export function validateTodoItemPick(value, propertyPath = "$") {
  const result = anonymousValidator366487642(value, propertyPath);
  if (result.errors) {
    const info = {};
    for (const err of result.errors) {
      if (isNil(info[err.propertyPath])) {
        info[err.propertyPath] = err;
      } else if (Array.isArray(info[err.propertyPath])) {
        info[err.propertyPath].push(err);
      } else {
        info[err.propertyPath] = [info[err.propertyPath], err];
      }
    }
    /** @type {{ error: AppError }} */
    return {
      error: AppError.validationError("validator.error", info),
    };
  }
  /** @type {{ value: TodoItemPick}} */
  return { value: result.value };
}
/**
 * @param {undefined|any|TodoListResponseInput} value
 * @param {string|undefined} [propertyPath]
 * @returns {Either<TodoListResponse>}
 */
export function validateTodoListResponse(value, propertyPath = "$") {
  const result = anonymousValidator712084859(value, propertyPath);
  if (result.errors) {
    const info = {};
    for (const err of result.errors) {
      if (isNil(info[err.propertyPath])) {
        info[err.propertyPath] = err;
      } else if (Array.isArray(info[err.propertyPath])) {
        info[err.propertyPath].push(err);
      } else {
        info[err.propertyPath] = [info[err.propertyPath], err];
      }
    }
    /** @type {{ error: AppError }} */
    return {
      error: AppError.validationError("validator.error", info),
    };
  }
  /** @type {{ value: TodoListResponse}} */
  return { value: result.value };
}
/**
 * @param {undefined|any|TodoSingleParamsInput} value
 * @param {string|undefined} [propertyPath]
 * @returns {Either<TodoSingleParams>}
 */
export function validateTodoSingleParams(value, propertyPath = "$") {
  const result = anonymousValidator248765300(value, propertyPath);
  if (result.errors) {
    const info = {};
    for (const err of result.errors) {
      if (isNil(info[err.propertyPath])) {
        info[err.propertyPath] = err;
      } else if (Array.isArray(info[err.propertyPath])) {
        info[err.propertyPath].push(err);
      } else {
        info[err.propertyPath] = [info[err.propertyPath], err];
      }
    }
    /** @type {{ error: AppError }} */
    return {
      error: AppError.validationError("validator.error", info),
    };
  }
  /** @type {{ value: TodoSingleParams}} */
  return { value: result.value };
}
/**
 * @param {undefined|any|TodoSingleResponseInput} value
 * @param {string|undefined} [propertyPath]
 * @returns {Either<TodoSingleResponse>}
 */
export function validateTodoSingleResponse(value, propertyPath = "$") {
  const result = anonymousValidator1328493231(value, propertyPath);
  if (result.errors) {
    const info = {};
    for (const err of result.errors) {
      if (isNil(info[err.propertyPath])) {
        info[err.propertyPath] = err;
      } else if (Array.isArray(info[err.propertyPath])) {
        info[err.propertyPath].push(err);
      } else {
        info[err.propertyPath] = [info[err.propertyPath], err];
      }
    }
    /** @type {{ error: AppError }} */
    return {
      error: AppError.validationError("validator.error", info),
    };
  }
  /** @type {{ value: TodoSingleResponse}} */
  return { value: result.value };
}
