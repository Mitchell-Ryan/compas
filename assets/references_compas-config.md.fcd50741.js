import{_ as n,c as a,o as t,a as e}from"./app.cf930e1c.js";const g='{"title":"Compas configuration","description":"","frontmatter":{},"headers":[{"level":2,"title":"Contents","slug":"contents"},{"level":3,"title":"Example","slug":"example"}],"relativePath":"references/compas-config.md"}',s={},o=e(`<h1 id="compas-configuration" tabindex="-1">Compas configuration <a class="header-anchor" href="#compas-configuration" aria-hidden="true">#</a></h1><p>Most features work without external configuration. They are either relatively strict to enforce a way of working, or are configurable via their api&#39;s. However, some features are better configured via a global configuration file. This file is optional, but if exists should be located at <code>config/compas.{js,mjs,json}</code>. The file is loaded via the <a href="/features/config-files.html#config-loader">config loader</a>.</p><h2 id="contents" tabindex="-1">Contents <a class="header-anchor" href="#contents" aria-hidden="true">#</a></h2><p>All keys are optional</p><ul><li><strong>cli</strong> (object): root property for configuration for the CLI package <ul><li><strong>commandDirectories</strong> (string[]): Array of directories relative to the project root. All JavaScript files will be imported by the CLI and checked if it exports a &#39;cliDefinition&#39;. See <a href="https://compasjs.com/features/extending-the-cli.html" target="_blank" rel="noopener noreferrer">extending the cli</a> for more information. The loader does not recurse in to sub directories.</li><li><strong>globalWatchOptions</strong> (object): Project level watch options, applied to all commands running in &#39;watch&#39; mode via the Compas CLI. The values here are appended to the defaults of the specific command that is being watched. <ul><li><strong>extensions</strong> (string[]): Add file extensions that should be watched. Say that you are creating a static site generator, then you most likely also want to restart if markdown files are changed.</li><li><strong>ignorePatterns</strong> (string[]): Remove directories from being watched, this has precedence over the included extensions. Useful to ignore build output directories and other temporary output created by the command, so it is not restarted because of it&#39;s own changes.</li></ul></li></ul></li></ul><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">cli</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">commandDirectories</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/my-commands&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

      <span class="token literal-property property">globalWatchOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;md&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">ignorePatterns</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;dist&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,7),r=[o];function i(p,c,l,u,d,h){return t(),a("div",null,r)}var k=n(s,[["render",i]]);export{g as __pageData,k as default};
