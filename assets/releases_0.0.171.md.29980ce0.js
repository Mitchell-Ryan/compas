import{_ as n,c as s,o as a,a as e}from"./app.cf930e1c.js";const g='{"title":"Release notes v0.0.171","description":"","frontmatter":{},"headers":[{"level":2,"title":"The small changes","slug":"the-small-changes"},{"level":2,"title":"The breaking changes","slug":"the-breaking-changes"},{"level":2,"title":"The features","slug":"the-features"},{"level":2,"title":"In closing","slug":"in-closing"}],"relativePath":"releases/0.0.171.md"}',t={},o=e(`<h1 id="release-notes-v0-0-171" tabindex="-1">Release notes v0.0.171 <a class="header-anchor" href="#release-notes-v0-0-171" aria-hidden="true">#</a></h1><p>Another release packed with a bunch of dependency updates, fixes and of course some features. Although we have some breaking changes. That is not the major reason for these release notes. Read on to check what it is.</p><h2 id="the-small-changes" tabindex="-1">The small changes <a class="header-anchor" href="#the-small-changes" aria-hidden="true">#</a></h2><ul><li>AppError#format know supports formatting all kinds of primitives in addition to Error and AppError instances. This is useful when an underlying library throws a string instead of an Error.</li><li>We enabled running Compas tests on Node.js 17. In the near future we will also run our lint &amp; benchmarks on Node.js 17. Note that even though we run our tests there, it is not officially supported.</li><li>Code generators now print out an error if <code>enabledGroups</code> contain a group that is not included in the known structure. This can help spot typo&#39;s or left over artifacts.</li><li>Include a React import in the <code>common/reactQuries.tsx</code> file, this isn&#39;t used but required in some environments.</li></ul><h2 id="the-breaking-changes" tabindex="-1">The breaking changes <a class="header-anchor" href="#the-breaking-changes" aria-hidden="true">#</a></h2><p>Let&#39;s start with a breaking change in the way uploaded files are represented in the backend. We updated Formidable to <code>2.0.1</code> after being on a canary version for too long. This introduced some property renames:</p><ul><li><code>ctx.validatedFiles.xxx.path</code> -&gt; <code>ctx.validatedFiles.xxx.filepath</code></li><li><code>ctx.validatedFiles.xxx.name</code> -&gt; <code>ctx.validatedFiles.xxx.originalFilename</code></li><li><code>ctx.validatedFiles.xxx.type</code> -&gt; <code>ctx.validatedFiles.xxx.mimetype</code></li></ul><p>The easiest way to update these changes, is to globally search for <code>ctx.validatedFiles</code> and trace your usages from there. Note that you also need to regenerate this the validator know also checks on these new properties.</p><p>The second breaking change has to do with the <code>AbortSignal</code> and support for it in Axios &amp; react-query. All api client functions now optionally accept a partial <code>AxiosRequestConfig</code>, currently limited to <code>signal</code>, that is passed to Axios directly. This also affects the generated react-query based hooks. Luckily for us, react-query now supports creating an <code>AbortSignal</code> for us in the <code>queryFn</code>, so we use that to provide to the api client functions. This also means that we don&#39;t have to add <code>cancelToken</code> to the <code>UseQueryOptions</code>, so that is removed as well.</p><h2 id="the-features" tabindex="-1">The features <a class="header-anchor" href="#the-features" aria-hidden="true">#</a></h2><p>After already having a way to extend a Compas structure with an imported OpenAPI specification via <code>app.extendWithOpenApi</code>. It is now possible to convert a Compas structure as to the OpenAPI v3.0.3 specification. Currently, the minimal set is implemented to create a correct and complete definition (with most Compas features covered). Later on, we want to extend the exporter with more OpenAPI specific features (e.g. security methods/tags per endpoints, base urls, various http schema&#39;s, etc.), but those need more configuration (within projects) and most likely vary a lot between project implementations.</p><p>As said before most Compas types are implemented, such as:</p><ul><li>HTTP methods: GET, PUT, POST, PATCH, DELETE</li><li>Params, Query, Body and Response types <ul><li>References are hoisted to OpenAPI component objects</li><li>Including file upload and download support</li></ul></li><li>Spec information: <ul><li>Title, version, description</li></ul></li><li>Pass-through settings (for now only <code>servers</code>)</li><li>Compas groups <ul><li>When no groups provided all groups within the <code>inputPath</code> structure are exposed</li><li>When a type is referenced but not part of one of the <code>enabledGroups</code>, the reference is resolved and included in the output. This is the same behaviour as all other <code>generate</code> calls that accept an <code>enabledGroups</code> option.</li></ul></li></ul><p>To enable this feature, the following code snippet could be applied:</p><div class="language-js"><pre><code><span class="token comment">// new or existing App instance</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">verbose</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">generateOpenApi</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// Path that is previously used as \`outputDirectory\`</span>
  <span class="token literal-property property">inputPath</span><span class="token operator">:</span> <span class="token string">&quot;./src/generated&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">outputFile</span><span class="token operator">:</span> <span class="token string">&quot;./docs/openapi.json&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enabledGroups</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;exampleGroup&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">openApiOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Title of specification&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&quot;Lorem Ipsum&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">servers</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;https://locationToApi&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>This will write the OpenAPI based specification to <code>docs/openapi.json</code>. To expose this file via a custom route, you can use something like:</p><div class="language-js"><pre><code><span class="token comment">// gen</span>
<span class="token constant">R</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/docs/openapi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;docsOpenAPI&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">spec</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// src</span>
<span class="token keyword">const</span> openapiSpec <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>
  <span class="token keyword">await</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token function">pathJoin</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;docs/openapi.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

groupHandeler<span class="token punctuation">.</span><span class="token function-variable function">docsOpenAPI</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">spec</span><span class="token operator">:</span> openapiSpec <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="in-closing" tabindex="-1">In closing <a class="header-anchor" href="#in-closing" aria-hidden="true">#</a></h2><p>We are now able to import &amp; export &amp; import OpenAPI specs again and again. We hope you use this feature wisely \u{1F609} The next release, if we don&#39;t need a bug fix release (A), is going to contain JWT based sessions backed by @compas/store. If you have any usages not covered by the current sessions and want Compas to support them, please add it to <a href="https://github.com/compasjs/compas/issues/1280" target="_blank" rel="noopener noreferrer">Issue 1280</a> and if you are curious what the new implementation looks like, feel free to check out out the <a href="https://github.com/compasjs/compas/pull/1302" target="_blank" rel="noopener noreferrer">PR</a>.</p>`,19),p=[o];function c(i,r,l,u,d,h){return a(),s("div",null,p)}var f=n(t,[["render",c]]);export{g as __pageData,f as default};
