{{ if (it.children) { }}
    {{ for (const child of children) { }}
    {{= routerMatcher(child) }}
    {{ } }}
{{ } }}

function {{= functionName }}(path, params, currentIdx) {
{{ const qName = routeGroup + "_" + routeName; }}

{{ if (prio === "STATIC") { }}

    if (!path.startsWith({{= quote(staticPath) }}, currentIdx)) {
      return undefined;
    }
    {{ if (it.routeName !== undefined && (it.children === undefined || it.children.length === 0)) { }}
    return handlers.{{= qName }};
    {{ } else { }}
    const nextIdx = currentIdx + 1 + {{= staticPath.length }};
    let handler = undefined;

        {{ if (it.routeName !== undefined) { }}
        if (path.length === nextIdx - 1) {
            return handlers.{{= qName }};
        }
        {{ } }}

        {{ for (const child of children) { }}
        handler = {{= child.functionName }}(path, params, nextIdx);
        if (handler !== undefined) {
          return handler;
        }
        {{ } }}

        return undefined;
    {{ } }}

{{ } else if (prio === "PARAM") { }}

    let subIdx = path.indexOf("/", currentIdx);
    if (subIdx === -1) {
      subIdx = path.length;
    }

    const subPath = path.substring(currentIdx, subIdx);
    {{ if (it.routeName !== undefined && (it.children === undefined || it.children.length === 0)) { }}
    params.{{= paramName }} = subPath;
    return handlers.{{= qName }};
    {{ } else { }}
        const nextIdx = subIdx + 1;
        let handler = undefined;

        {{ if (it.routeName !== undefined) { }}
        if (path.length === nextIdx - 1) {
            params.{{= paramName }} = subPath;
            return handlers.{{= qName }};
        }
        {{ } }}

        {{ for (const child of children) { }}
        handler = {{= child.functionName }}(path, params, nextIdx);
        if (handler !== undefined) {
            params.{{= paramName }} = subPath;
            return handler;
        }
        {{ } }}

        {{ if (it.routeName !== undefined) { }}
        params.{{= paramName }} = subPath;
        return handlers.{{= qName }};
        {{ } else { }}
        return undefined;
        {{ } }}

    {{ } }}

{{ } else if (prio === "WILDCARD" && it.routeName !== undefined) { }}

    return handlers.{{= qName }};

{{ } }}

};
