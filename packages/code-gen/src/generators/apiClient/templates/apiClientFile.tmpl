{{ if (opts.fileHeader !== undefined) { }}
{{= opts.fileHeader }}
{{ } }}

{{ if (opts.enableMocks) { }}
import {
{{ for (const g of groups) { }}
{{= lowerCaseFirst(g) }}Mocks,
{{ } }}
} from "./mocks.js";
{{ } }}

let _internalClient = undefined;

function checkApiClient() {
  if (_internalClient === undefined) {
    throw new Error("Initialize api client with createApiClient");
  }
}

/**
 * Should set an axios compatible api client
 * @param {AxiosInstance} instance
 */
export function createApiClient(instance) {
  _internalClient = instance;
}

function setXRequestId(headers) {
  _internalClient.defaults.headers.common["X-Request-Id"] = headers["x-request-id"];
}

{{ for (const group of groups) { }}
  export const {{= group }}Api = {
    {{ for (const route of routes) { }}
      {{ if (models[route].group !== group) { continue; } }}
      {{= apiClientFn({ model: models[route], opts }) }}
    {{ } }}
  };
{{ } }}
