{{ for (const groupName of Object.keys(structure)) { }}
  {{ for (const itemName of Object.keys(structure[groupName])) { }}
    {{ const item = structure[groupName][itemName]; }}
    {{ if (item.type !== "route") { }}
    {{ continue; }}
    {{ } }}

/**
 * @name {{= item.uniqueName }}Call
 * @function
{{ if (item.params) { }}* @param { {{= item.params.reference.uniqueName + "_Input" }} } params{{ } }}
{{ if (item.query) { }}* @param { {{= item.query.reference.uniqueName + "_Input" }} } query{{ } }}
{{ if (item.body) { }}* @param { {{= item.body.reference.uniqueName + "_Input" }} } body{{ } }}
{{ if (item.files) { }}* @param { {{= item.files.reference.uniqueName + "_Input" }} } files{{ } }}
 * @returns {Promise<{{= item.response ? item.response.reference.uniqueName : "*" }}>}
 */
((newline))
  {{ } }}
{{ } }}


{{ for (const groupName of Object.keys(structure)) { }}
  /**
   * @name {{= groupName }}Api
  {{ let hasRoute = false; }}
  {{ for (const itemName of Object.keys(structure[groupName])) { }}
    {{ const item = structure[groupName][itemName]; }}

    {{ if (item.type !== "route") { }}
    {{ continue; }}
    {{ } }}
    {{ hasRoute = true; }}
    * @property { {{= item.uniqueName }}Call} {{= item.name }}
  {{ } }}
  {{ if (!hasRoute) { }}
    * @typedef {object}
  {{ } }}
 */
((newline))
{{ } }}
