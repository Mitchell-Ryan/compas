{{ for (const groupName of Object.keys(structure)) { }}
  {{ for (const itemName of Object.keys(structure[groupName])) { }}
    {{ const item = structure[groupName][itemName]; }}
    {{ if (item.type !== "route") { }}
    {{ continue; }}
    {{ } }}

    {{ const hasParam = item.params !== undefined || !!item.path.split("/").find(it => it.startsWith(":")); }}

/**
 * @name {{= item.uniqueName }}Call
 * @typedef {function(
{{ if (hasParam) { }}* params: {{= item.params ? item.params.reference.uniqueName + "_Input" : "*" }},{{ } }}
{{ if (item.query) { }}* query: {{= item.query ? item.query.reference.uniqueName + "_Input" : "*" }},{{ } }}
{{ if (item.body) { }}* body: {{= item.body ? item.body.reference.uniqueName + "_Input" : "*" }},{{ } }}
 * ): (Promise<{{= item.response ? item.response.reference.uniqueName : "*" }}>)}
 */
  {{ } }}
{{ } }}


{{ for (const groupName of Object.keys(structure)) { }}
  /**
   * @name {{= groupName }}Api

  {{ for (const itemName of Object.keys(structure[groupName])) { }}
    {{ const item = structure[groupName][itemName]; }}

    {{ if (item.type !== "route") { }}
    {{ continue; }}
    {{ } }}
    * @property { {{= item.uniqueName }}Call} {{= item.name }}
  {{ } }}
 */
{{ } }}
