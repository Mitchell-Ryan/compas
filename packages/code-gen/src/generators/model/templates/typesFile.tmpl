{{ if (opts.fileHeader !== undefined) { }}
{{= opts.fileHeader }}
{{ } }}

{{ if (opts.useTypescript) { }}
{{ for (const uniqueName of Object.keys(models)) { }}

/**
 * {{= uniqueName }}
 * {{ if (models[uniqueName].docString) { }}Docs: {{= models[uniqueName].docString }}{{ } }}
 */
export type {{=uniqueName}} = {{= typeExec({ type: models[uniqueName].type, model: models[uniqueName], ignoreDefaults: false }).trim() }};

/**
 * {{= uniqueName }}_Optional
 * {{ if (models[uniqueName].docString) { }}Docs: {{= models[uniqueName].docString }}{{ } }}
 */
export type {{=uniqueName}}_Optional = {{= typeExec({ type: models[uniqueName].type, model: models[uniqueName], ignoreDefaults: true }).trim() }};

{{ } }}
{{ } else { }}
{{ for (const uniqueName of Object.keys(models)) { }}

/**
 * {{= uniqueName }}
 * {{ if (models[uniqueName].docString) { }}Docs: {{= models[uniqueName].docString }}{{ } }}
 * @typedef { {{= typeExec({ type: models[uniqueName].type, model: models[uniqueName], ignoreDefaults: false }).trim() }}} {{= uniqueName }}
 */

/**
 * {{= uniqueName }}_Optional
 * {{ if (models[uniqueName].docString) { }}Docs: {{= models[uniqueName].docString }}{{ } }}
 * @typedef { {{= typeExec({ type: models[uniqueName].type, model: models[uniqueName], ignoreDefaults: true }).trim() }}} {{= uniqueName }}_Optional
 */

{{ } }}
{{ } }}
