{{ if (item.docString !== "") { }}
/**
 * {{= item.docString }}
 */
{{ } }}
function {{= item.type}}Validator{{= ctx.counter++ }}(
  value,
  propertyPath,
  errorList = [],
  parentType = "{{= item.type }}"
  ) {
  if (isNil(value)) {
    {{ if (item.isOptional) { }}
      return {{= item.defaultValue }};
    {{ } else { }}
      return buildError("validator.{{= item.type }}.undefined", { propertyPath }, errorList);
    {{ } }}
  }

  {{ /* makes it easier for type implementations */ }}
  {{ item.validator = item.validator || {}; }}

  {{= validatorExec({ type: item.type, item, ctx, options, }).trim() }}
}
((newline))

