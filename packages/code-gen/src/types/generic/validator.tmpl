{{ const numKeys = ctx.counter; }}
{{ const numValues = ctx.counter + 1; }}
{{ ctx.addFunc(validatorsAnonFn({ model: model.keys, ctx })); }}
{{ ctx.addFunc(validatorsAnonFn({ model: model.values, ctx })); }}


if (typeof value !== "object") {
  throw _errorFn(`validator.${parentType}.type`, { propertyPath });
}

const result = Object.create(null);
for (const key of Object.keys(value)) {
  const validatedKey = {{= model.keys.type }}Validator{{= numKeys }}(key, propertyPath + ".$key");
  const validatedValue = {{= model.values.type }}Validator{{= numValues }}(value[key], propertyPath + ".$value");

  result[validatedKey] = validatedValue;
}

return result;
